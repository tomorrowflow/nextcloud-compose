services:
  nextcloud-db:
    image: mariadb:lts
    container_name: nextcloud-db
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: --transaction-isolation=READ-COMMITTED --innodb_read_only_compressed=OFF
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./database:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_INITDB_SKIP_TZINFO=1
      - MARIADB_AUTO_UPGRADE=1
    labels:
      # Autoheal and Watchtower labels
      - autoheal=true
      - com.centurylinklabs.watchtower.enable=true
    networks:
      - proxy

  nextcloud-redis:
    image: redis:alpine
    container_name: nextcloud-redis
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    hostname: nextcloud-redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 30s
    labels:
      # Autoheal and Watchtower labels
      - autoheal=true
      - com.centurylinklabs.watchtower.enable=true
    networks:
      - proxy

  nextcloud-app:
    image: nextcloud:latest
    container_name: nextcloud-app
    restart: unless-stopped
    depends_on:
      nextcloud-db:
        condition: service_healthy
      nextcloud-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/status.php"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    environment:
      - TRUSTED_PROXIES=172.18.0.0/16
      - DEFAULT_PHONE_REGION=de
      - MAINTENANCE_WINDOW=1
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_HOST=nextcloud-db
      - REDIS_HOST=nextcloud-redis
      - REDIS_HOST_PASSWORD=${REDIS_PASSWORD}
      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_ADMIN_USER}
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD}
      - OVERWRITEPROTOCOL=https
      - OVERWRITECLIURL=https://${DOMAIN_NAME}
      - OVERWRITEHOST=${DOMAIN_NAME}
    volumes:
      - ./app:/var/www/html
      - ./data:/var/www/html/data
      # Pre-installation hooks for PHP configuration and extensions
      - ./hooks/pre-installation:/docker-entrypoint-hooks.d/pre-installation:ro
    expose:
      - "80"
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.http.routers.nextcloud.entrypoints=websecure
      - traefik.http.routers.nextcloud.rule=Host(`${DOMAIN_NAME}`)
      - traefik.http.routers.nextcloud.service=nextcloud
      - traefik.http.routers.nextcloud.priority=5
      - traefik.http.services.nextcloud.loadbalancer.server.port=80
      - traefik.http.routers.nextcloud.tls.certresolver=letsencrypt
      # Autoheal and Watchtower labels
      - autoheal=true
      - com.centurylinklabs.watchtower.enable=true
    networks:
      - proxy

  traefik:
    image: traefik:latest
    container_name: "nextcloud-traefik"
    restart: unless-stopped
    depends_on:
      nextcloud-app:
        condition: service_healthy
    security_opt:
      - "no-new-privileges:true"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    healthcheck:
        test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/ping"]
        interval: 30s
        timeout: 10s
        retries: 5
        start_period: 60s
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/traefik.yml:/traefik.yml:ro"
      - "./traefik/letsencrypt:/letsencrypt"
      - "./traefik/config:/config"
      - "./traefik/acme.json:/acme.json"
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      # Simple dashboard routing for insecure API mode
      - traefik.http.routers.traefik-dashboard.entrypoints=websecure
      - traefik.http.routers.traefik-dashboard.rule=Host(`${DOMAIN_NAME}`) && PathPrefix(`/dashboard`)
      - traefik.http.routers.traefik-dashboard.service=api@internal
      - traefik.http.routers.traefik-dashboard.middlewares=user-auth@file
      - traefik.http.routers.traefik-dashboard.tls.certresolver=letsencrypt
      # API routing
      - traefik.http.routers.traefik-api.entrypoints=websecure
      - traefik.http.routers.traefik-api.rule=Host(`${DOMAIN_NAME}`) && PathPrefix(`/api`)
      - traefik.http.routers.traefik-api.service=api@internal
      - traefik.http.routers.traefik-api.middlewares=user-auth@file
      - traefik.http.routers.traefik-api.tls.certresolver=letsencrypt
      # HTTP to HTTPS redirect
      - traefik.http.routers.traefik-insecure.entrypoints=web
      - traefik.http.routers.traefik-insecure.rule=Host(`${DOMAIN_NAME}`) && (PathPrefix(`/dashboard`) || PathPrefix(`/api`))
      - traefik.http.routers.traefik-insecure.middlewares=redirect-to-https@file
      # Autoheal and Watchtower labels
      - autoheal=true
      - com.centurylinklabs.watchtower.enable=true
    networks:
      - proxy

  nextcloud-talk:
    container_name: nextcloud-talk_hpb
    image: ghcr.io/nextcloud-releases/aio-talk:latest
    init: true
    ports:
      - 3478:3478/tcp
      - 3478:3478/udp
      - 8081:8081/tcp
    environment:
      - TZ=Europe/Berlin
      - TALK_PORT=3478
      - NC_DOMAIN=${DOMAIN_NAME}
      - TALK_HOST=signal.${DOMAIN_NAME}
      - TURN_SECRET=${TURN_SECRET}
      - SIGNALING_SECRET=${SIGNALING_SECRET}
      - INTERNAL_SECRET=${INTERNAL_SECRET}
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.http.routers.talk-hpf.entrypoints=websecure
      - traefik.http.routers.talk-hpf.rule=Host(`signal.${DOMAIN_NAME}`)
      - traefik.http.routers.talk-hpf.service=talk-hpf
      - traefik.http.routers.talk-hpf.priority=3
      - traefik.http.services.talk-hpf.loadbalancer.server.port=8081
      - traefik.http.routers.talk-hpf.tls.certresolver=letsencrypt
      # Watchtower labels
      - com.centurylinklabs.watchtower.enable=true
    networks:
      - proxy

  # Docker Autoheal - Monitors and restarts unhealthy containers
  autoheal:
    image: willfarrell/autoheal:latest
    container_name: nextcloud-autoheal
    restart: unless-stopped
    environment:
      - AUTOHEAL_CONTAINER_LABEL=autoheal
      - AUTOHEAL_INTERVAL=30
      - AUTOHEAL_START_PERIOD=300
      - AUTOHEAL_DEFAULT_STOP_TIMEOUT=10
      - TZ=Europe/Berlin
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - autoheal=false  # Don't monitor autoheal itself
      - com.centurylinklabs.watchtower.enable=true

  # Watchtower - Automatic container updates
  watchtower:
    image: containrrr/watchtower:latest
    container_name: nextcloud-watchtower
    restart: unless-stopped
    environment:
      - TZ=Europe/Berlin
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_REMOVE_VOLUMES=false
      - WATCHTOWER_INCLUDE_STOPPED=false
      - WATCHTOWER_INCLUDE_RESTARTING=false
      - WATCHTOWER_SCHEDULE=0 0 4 * * *  # Daily at 4 AM
      - WATCHTOWER_NOTIFICATIONS=email
      - WATCHTOWER_NOTIFICATION_EMAIL_FROM=${WATCHTOWER_EMAIL_FROM}
      - WATCHTOWER_NOTIFICATION_EMAIL_TO=${WATCHTOWER_EMAIL_TO}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=${WATCHTOWER_EMAIL_SERVER}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=${WATCHTOWER_EMAIL_PORT}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=${WATCHTOWER_EMAIL_USER}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=${WATCHTOWER_EMAIL_PASSWORD}
      - WATCHTOWER_NOTIFICATION_EMAIL_DELAY=2
      - WATCHTOWER_LABEL_ENABLE=true  # Only update containers with watchtower.enable=true
      - WATCHTOWER_ROLLING_RESTART=true
      - WATCHTOWER_LIFECYCLE_HOOKS=true
      - WATCHTOWER_HTTP_API_UPDATE=true
      - WATCHTOWER_HTTP_API_TOKEN=${WATCHTOWER_API_TOKEN}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./scripts:/scripts:ro
    labels:
      - autoheal=false  # Don't monitor watchtower itself
      - com.centurylinklabs.watchtower.enable=false  # Don't update watchtower automatically

  # Watchtower Companion - Handles post-update tasks
  watchtower-companion:
    image: alpine:latest
    container_name: nextcloud-watchtower-companion
    restart: unless-stopped
    environment:
      - TZ=Europe/Berlin
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./scripts:/scripts:ro
    command: |
      sh -c "
        apk add --no-cache docker-cli curl jq &&
        while true; do
          # Monitor for container recreations
          docker events --filter 'event=start' --filter 'container=nextcloud-app' --format '{{.Actor.Attributes.name}}' | while read container; do
            echo 'Detected Nextcloud container restart, checking if update occurred...'
            sleep 60  # Wait for container to fully start
            if [ -f /scripts/watchtower-hooks/nextcloud-post-update.sh ]; then
              echo 'Running post-update hook...'
              /scripts/watchtower-hooks/nextcloud-post-update.sh
            fi
          done
          sleep 10
        done
      "
    labels:
      - autoheal=false
      - com.centurylinklabs.watchtower.enable=false

  nextcloud-whiteboard:
    image: ghcr.io/nextcloud-releases/whiteboard:latest
    container_name: nextcloud-whiteboard
    restart: unless-stopped
    depends_on:
      nextcloud-app:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:3002/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    environment:
      - JWT_SECRET_KEY=${WHITEBOARD_JWT_SECRET}
      - NEXTCLOUD_URL=https://${DOMAIN_NAME}
      - PORT=3002
      - NODE_ENV=production
      - LOG_LEVEL=info
    volumes:
      - ./whiteboard-data:/app/data
    expose:
      - "3002"
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.http.routers.nextcloud-whiteboard.entrypoints=websecure
      - traefik.http.routers.nextcloud-whiteboard.rule=Host(`${DOMAIN_NAME}`) && PathPrefix(`/whiteboard`)
      - traefik.http.routers.nextcloud-whiteboard.service=nextcloud-whiteboard
      - traefik.http.routers.nextcloud-whiteboard.priority=10
      - traefik.http.services.nextcloud-whiteboard.loadbalancer.server.port=3002
      - traefik.http.routers.nextcloud-whiteboard.tls.certresolver=letsencrypt
      # Path stripping middleware to fix 404 error
      - traefik.http.middlewares.strip-whiteboard.stripprefix.prefixes=/whiteboard
      - traefik.http.routers.nextcloud-whiteboard.middlewares=strip-whiteboard
      # Autoheal and Watchtower labels
      - autoheal=true
      - com.centurylinklabs.watchtower.enable=true
    networks:
      - proxy
    
networks:
  proxy:
    external: true
    name: proxy